import{fromPairs as e,map as r,prop as o,compose as t,filter as i,mergeWith as n,ifElse as u,apply as a,view as l}from"ramda";import{mergeDeep as s,filterWithKeys as v,mapPropValueAsIndex as c}from"rescape-ramda";var f;function m(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}var d=require("./result"),b=require("../adt/union/union").typeSymbol;module.exports=(m(f={Error:d.Error,Ok:d.Ok,hasInstance:d.hasInstance,of:d.of,fromJSON:d.fromJSON},b,d[b]),m(f,"try",require("./try")),m(f,"fromNullable",function(e,r){var o=require("../conversions/nullable-to-result");return arguments.length>1?o(e,r):o(e)}),m(f,"fromValidation",function(e){return require("../conversions/validation-to-result")(e)}),m(f,"fromMaybe",function(e,r){return require("../conversions/maybe-to-result")(e,r)}),f);const S={IS_SELECTED:"isSelected",IS_ACTIVE:"isActive"},p=e(r(e=>[e,o(e)],["isSelected","isActive"])),y=(e,r)=>s(e,r),q=(e,o,f,m)=>(d,b)=>t(v((e,r)=>o(e)),r(e=>e.unsafeGet()),i(e=>(void 0)(e)),r=>n((r,o)=>u(([r,o])=>a(e,[r.value,o.value]),([e,r])=>(void 0)(a(s,[e.value,r.value])),([e,r])=>(void 0)())([r,o]),...r),r(e=>r(void 0,c("id",e))))([l(f,d),l(m,b)]);export{S as STATUS,q as makeInnerJoinByLensThenFilterSelector,y as mergeStateAndProps,p as status};
//# sourceMappingURL=selectorHelpers.mjs.map
