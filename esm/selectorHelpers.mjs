import{fromPairs as e,map as a,prop as t,compose as r,filter as i,mergeWith as s,ifElse as l,apply as o,view as m}from"ramda";import{mergeDeep as c,filterWithKeys as u,mapPropValueAsIndex as v}from"rescape-ramda";import{Ok as d,Error as f}from"folktale/result";const p={IS_SELECTED:"isSelected",IS_ACTIVE:"isActive"},S=e(a(e=>[e,t(e)],["isSelected","isActive"])),n=(e,a)=>c(e,a),E=(e,t,p,S)=>(n,E)=>r(u((e,a)=>t(e)),a(e=>e.unsafeGet()),i(e=>d.hasInstance(e)),a=>s((a,t)=>l(([a,t])=>o(e,[a.value,t.value]),([e,a])=>d(o(c,[e.value,a.value])),([e,a])=>f())([a,t]),...a),a(e=>a(f,v("id",e))))([m(p,n),m(S,E)]);export{p as STATUS,E as makeInnerJoinByLensThenFilterSelector,n as mergeStateAndProps,S as status};
//# sourceMappingURL=selectorHelpers.mjs.map
